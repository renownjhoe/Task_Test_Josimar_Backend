name: Deploy to AWS EC2

on:
  push:
    branches:
      - main  # Change this to your deployment branch

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up SSH key
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.EC2_KEY_PAIR_PEM }}" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          ssh-keyscan -H ${{ secrets.EC2_PUBLIC_IP }} >> ~/.ssh/known_hosts

      - name: Copy project to EC2
        run: |
          scp -r . ${{ secrets.EC2_USERNAME }}@${{ secrets.EC2_PUBLIC_IP }}:/home/ubuntu/app

      - name: SSH to EC2 and deploy
        run: |
          ssh -o StrictHostKeyChecking=no ${{ secrets.EC2_USERNAME }}@${{ secrets.EC2_PUBLIC_IP }} << 'EOF'
            # Update and install necessary packages
            echo "Updating system and installing Docker & Nginx..."
            sudo apt update && sudo apt install -y docker.io nginx

            # Enable and start Docker & Nginx
            echo "Enabling and starting Docker & Nginx..."
            sudo systemctl enable docker nginx
            sudo systemctl start docker nginx

            # Configure Nginx to proxy traffic to Docker container (update port accordingly)
            echo "Configuring Nginx..."
            sudo tee /etc/nginx/sites-available/default > /dev/null << 'EOT'
              server {
                listen 80;
                server_name ${{ secrets.EC2_PUBLIC_IP }};  # Update with your EC2 IP or Domain
                root /home/ubuntu/app;

                location / {
                  proxy_pass http://localhost:9000;  # Make sure to match your Docker container port
                  proxy_set_header Host \$host;
                  proxy_set_header X-Real-IP \$remote_addr;
                  proxy_set_header X-Forwarded-For \$proxy_add_x_forwarded_for;
                }
              }
          EOF

      - name: Deploy Docker
        run: |
          ssh -o StrictHostKeyChecking=no ${{ secrets.EC2_USERNAME }}@${{ secrets.EC2_PUBLIC_IP }} << 'EOF'

            # Link the site configuration and restart Nginx
            sudo ln -sf /etc/nginx/sites-available/default /etc/nginx/sites-enabled/
            sudo systemctl restart nginx
            sudo nginx -t  # Test Nginx configuration

            # Deploy Docker container
            echo "Building and deploying Docker container..."
            cd /home/ubuntu/app
            docker build -t brume .  # Build your Docker image
            docker stop brume-container || true  # Stop existing container if it exists
            docker rm brume-container || true  # Remove old container
            docker run -d --name brume-container -p 8081:9000 brume  # Ensure you expose the correct port
          EOF

      - name: Remove SSH key
        run: |
          rm -f ~/.ssh/id_rsa
