name: Deploy to AWS EC2

on:
  push:
    branches:
      - main  # Change this to your deployment branch

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up SSH key
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.EC2_KEY_PAIR_PEM }}" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          ssh-keyscan -H ${{ secrets.EC2_PUBLIC_IP }} >> ~/.ssh/known_hosts

      - name: Copy project to EC2
        run: |
          scp -r . ${{ secrets.EC2_USERNAME }}@${{ secrets.EC2_PUBLIC_IP }}:/home/ubuntu/app

      - name: Deploy and Configure Nginx on EC2
        run: |
          ssh ${{ secrets.EC2_USERNAME }}@${{ secrets.EC2_PUBLIC_IP }} << 'EOF'
            # Install necessary packages
            sudo apt update
            sudo apt install -y docker.io nginx
            
            # Enable and start Docker & Nginx
            sudo systemctl enable docker nginx
            sudo systemctl start docker nginx

            # Configure Nginx
            sudo tee /etc/nginx/sites-available/default > /dev/null <<EOT
            server {
                listen 80;
                server_name http://54.163.73.52;

                location / {
                    proxy_pass http://localhost:3000;
                    proxy_set_header Host \$host;
                    proxy_set_header X-Real-IP \$remote_addr;
                    proxy_set_header X-Forwarded-For \$proxy_add_x_forwarded_for;
                }
            }
            EOT

            # Restart Nginx
            sudo systemctl restart nginx

            # Deploy Docker container
            cd /home/ubuntu/app
            docker build -t brume .
            docker stop brume-container || true
            docker rm brume-container || true
            docker run -d --name brume-container -p 3000:3000 brume
          EOF
















# name: Deploy to AWS EC2

# on:
#   push:
#     branches:
#       - main

# jobs:
#   deploy:
#     runs-on: ubuntu-latest

#     steps:
#     - name: Checkout code
#       uses: actions/checkout@v2

#     - name: Set up Docker Buildx
#       uses: docker/setup-buildx-action@v1

#     - name: Login to Docker Hub
#       uses: docker/login-action@v1
#       with:
#         username: ${{ secrets.DOCKERHUB_USERNAME }}
#         password: ${{ secrets.DOCKERHUB_TOKEN }}

#     - name: Build and push Docker image
#       run: |
#         docker build -t brumebackend .
#         docker tag brumebackend:latest ${{ secrets.DOCKERHUB_USERNAME }}/brumebackend:latest
#         docker push ${{ secrets.DOCKERHUB_USERNAME }}/brumebackend:latest

#     - name: SSH to EC2 and install Docker
#       uses: appleboy/ssh-action@v0.1.10
#       with:
#         host: ${{ secrets.EC2_PUBLIC_IP }}
#         username: ubuntu
#         key: ${{ secrets.EC2_KEY_PAIR_PEM }}
#         script: |
#           sudo apt-get update
#           sudo apt-get install -y docker.io
#           sudo systemctl start docker 
#           sudo systemctl enable docker

#     - name: SSH to EC2 and deploy
#       uses: appleboy/ssh-action@v0.1.10
#       with:
#         host: ${{ secrets.EC2_PUBLIC_IP }}
#         username: ubuntu
#         key: ${{ secrets.EC2_KEY_PAIR_PEM }}
#         script: |
#           docker pull ${{ secrets.DOCKERHUB_USERNAME }}/brumebackend:latest
#           docker stop brumebackend || true
#           docker rm brumebackend || true
#           docker run -d -p 8080:80 --name brumebackend ${{ secrets.DOCKERHUB_USERNAME }}/brumebackend:latest